{
  "name": "remove",
  "ns": "mongojs",
  "title": "mongojs remove",
  "description": "mongojs remove",
  "nodes": [
    {
      "id": "0",
      "ns": "mongojs",
      "name": "db",
      "context": {
        "connectionString": "chix-test"
      }
    },
    {
      "id": "1",
      "ns": "mongojs",
      "name": "collection",
      "context": {
        "collection": "test"
      }
    },
    {
      "id": "2",
      "ns": "mongojs",
      "name": "remove"
    }
  ],
  "links": [
    {
      "source": "0",
      "target": "1",
      "out": "db",
      "in": "db"
    },
    {
      "source": "1",
      "target": "2",
      "out": "collection",
      "in": "collection"
    }
  ],
  "nodeDefinitions": {
    "mongojs": {
      "criteria": {
        "ports": {
          "input": {
            "criteria": {
              "type": "string",
              "title": "criteria",
              "description": "Specify a criteria in json",
              "required": true
            }
          },
          "output": {
            "criteria": {
              "type": "object"
            }
          }
        },
        "description": "Mongojs criteria",
        "ns": "mongojs",
        "name": "criteria",
        "fn": "output = { criteria: JSON.parse(input.criteria) }\n",
        "_id": "525c197b4281fd450f00005f"
      },
      "collection": {
        "ports": {
          "input": {
            "collection": {
              "type": "string",
              "title": "Collection",
              "description": "The collection name for this database",
              "required": true
            },
            "db": {
              "type": "object",
              "title": "Db Handle",
              "description": "Expects the `db` port of the mongojs.db node",
              "readonly": true,
              "required": true
            }
          },
          "output": {
            "collection": {
              "type": "object",
              "title": "Db Collection handle",
              "readonly": true
            }
          }
        },
        "dependencies": [
          "db"
        ],
        "type": "provider",
        "description": "mongojs collection",
        "ns": "mongojs",
        "name": "collection",
        "fn": "output = { collection: input.db.collection(input.collection) }\n",
        "_id": "525c197b4281fd450f00005e"
      },
      "db": {
        "ports": {
          "input": {
            "connectionString": {
              "type": "string",
              "title": "Connection String",
              "description": "The connection string should follow the format described in [the mongo connection](http://docs.mongodb.org/manual/reference/connection-string/) string docs",
              "require": true
            }
          },
          "output": {
            "db": {
              "type": "object"
            }
          }
        },
        "require": {
          "mongojs": "latest"
        },
        "type": "provider",
        "description": "mongojs database",
        "ns": "mongojs",
        "name": "db",
        "fn": "output = { db: mongojs(input.connectionString) }\n",
        "_id": "525c197b4281fd450f000060"
      },
      "find": {
        "ports": {
          "input": {
            "collection": {
              "type": "object",
              "title": "A mongojs.collection handle",
              "required": true,
              "readonly": true
            },
            "criteria": {
              "type": "object",
              "title": "A mongojs criteria JSON object",
              "required": true
            }
          },
          "output": {
            "documents": {
              "type": "object"
            }
          }
        },
        "dependencies": [
          "collection"
        ],
        "description": "mongojs find",
        "ns": "mongojs",
        "name": "find",
        "fn": "output = [input.collection, 'find', input.criteria]\n",
        "_id": "525c197b4281fd450f000061"
      }
    }
  }
}
